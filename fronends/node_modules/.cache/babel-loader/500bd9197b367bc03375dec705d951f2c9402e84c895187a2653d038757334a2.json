{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport NavItem from './NavItem';\nimport NavLink from './NavLink';\nvar propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string|number}\n   * @required\n   */\n  id: PropTypes.any,\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n  /** Disables the toggle NavLink  */\n  disabled: PropTypes.bool,\n  /** Style the toggle NavLink as active  */\n  active: PropTypes.bool,\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n  /**\n   * Menu color variant.\n   *\n   * Omitting this will use the default light color.\n   */\n  menuVariant: PropTypes.oneOf(['dark']),\n  /** @ignore */\n  bsPrefix: PropTypes.string\n};\nvar NavDropdown = React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n    title = _ref.title,\n    children = _ref.children,\n    bsPrefix = _ref.bsPrefix,\n    rootCloseEvent = _ref.rootCloseEvent,\n    menuRole = _ref.menuRole,\n    disabled = _ref.disabled,\n    active = _ref.active,\n    renderMenuOnMount = _ref.renderMenuOnMount,\n    menuVariant = _ref.menuVariant,\n    props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"title\", \"children\", \"bsPrefix\", \"rootCloseEvent\", \"menuRole\", \"disabled\", \"active\", \"renderMenuOnMount\", \"menuVariant\"]);\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    ref: ref\n  }, props, {\n    as: NavItem\n  }), /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    id: id,\n    eventKey: null,\n    active: active,\n    disabled: disabled,\n    childBsPrefix: bsPrefix,\n    as: NavLink\n  }, title), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent,\n    variant: menuVariant\n  }, children));\n});\nNavDropdown.displayName = 'NavDropdown';\nNavDropdown.propTypes = propTypes;\nNavDropdown.Item = Dropdown.Item;\nNavDropdown.ItemText = Dropdown.ItemText;\nNavDropdown.Divider = Dropdown.Divider;\nNavDropdown.Header = Dropdown.Header;\nexport default NavDropdown;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","Dropdown","NavItem","NavLink","propTypes","id","any","onClick","func","title","node","isRequired","disabled","bool","active","menuRole","string","renderMenuOnMount","rootCloseEvent","menuVariant","oneOf","bsPrefix","NavDropdown","forwardRef","_ref","ref","children","props","createElement","as","Toggle","eventKey","childBsPrefix","Menu","role","renderOnMount","variant","displayName","Item","ItemText","Divider","Header"],"sources":["D:/assigment/fronend/node_modules/react-bootstrap-v5/lib/esm/NavDropdown.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport NavItem from './NavItem';\nimport NavLink from './NavLink';\nvar propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string|number}\n   * @required\n   */\n  id: PropTypes.any,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables the toggle NavLink  */\n  disabled: PropTypes.bool,\n\n  /** Style the toggle NavLink as active  */\n  active: PropTypes.bool,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /**\n   * Menu color variant.\n   *\n   * Omitting this will use the default light color.\n   */\n  menuVariant: PropTypes.oneOf(['dark']),\n\n  /** @ignore */\n  bsPrefix: PropTypes.string\n};\nvar NavDropdown = React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      title = _ref.title,\n      children = _ref.children,\n      bsPrefix = _ref.bsPrefix,\n      rootCloseEvent = _ref.rootCloseEvent,\n      menuRole = _ref.menuRole,\n      disabled = _ref.disabled,\n      active = _ref.active,\n      renderMenuOnMount = _ref.renderMenuOnMount,\n      menuVariant = _ref.menuVariant,\n      props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"title\", \"children\", \"bsPrefix\", \"rootCloseEvent\", \"menuRole\", \"disabled\", \"active\", \"renderMenuOnMount\", \"menuVariant\"]);\n\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    ref: ref\n  }, props, {\n    as: NavItem\n  }), /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    id: id,\n    eventKey: null,\n    active: active,\n    disabled: disabled,\n    childBsPrefix: bsPrefix,\n    as: NavLink\n  }, title), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent,\n    variant: menuVariant\n  }, children));\n});\nNavDropdown.displayName = 'NavDropdown';\nNavDropdown.propTypes = propTypes;\nNavDropdown.Item = Dropdown.Item;\nNavDropdown.ItemText = Dropdown.ItemText;\nNavDropdown.Divider = Dropdown.Divider;\nNavDropdown.Header = Dropdown.Header;\nexport default NavDropdown;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}